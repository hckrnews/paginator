{"version":3,"file":"paginator.module.js","sources":["../src/paginator.js"],"sourcesContent":["/**\n * The paginator.\n */\nclass Paginator {\n    constructor() {\n        this.items = [];\n        this.page = 0;\n        this.size = 10;\n        this.url = null;\n    }\n\n    /**\n     * Get the total of pages.\n     *\n     * @return {number}\n     */\n    get pages() {\n        return Math.ceil(this.total / this.size);\n    }\n\n    /**\n     * Get the previous page.\n     *\n     * @return {number}\n     */\n    get prev() {\n        return this.page > 0 ? this.page - 1 : null;\n    }\n\n    /**\n     * Get the next page.\n     *\n     * @return {number}\n     */\n    get next() {\n        return this.page !== null && this.end < this.total\n            ? this.page + 1\n            : null;\n    }\n\n    /**\n     * Get the start item index.\n     *\n     * @return {number}\n     */\n    get start() {\n        return this.page * this.size;\n    }\n\n    /**\n     * Get the end item index.\n     *\n     * @return {number}\n     */\n    get end() {\n        return this.start + this.size;\n    }\n\n    /**\n     * Get the current items.\n     *\n     * @return {array}\n     */\n    get current() {\n        return this.items.slice(this.start, this.end);\n    }\n\n    /**\n     * Get the total items.\n     *\n     * @return {number}\n     */\n    get total() {\n        return this.items.length;\n    }\n\n    /**\n     * Get the connector in the url.\n     *\n     * @return {string}\n     */\n    get connectorUrl() {\n        return this.url &&\n            (this.url.includes('&') ||\n                (this.url.includes('?') && !this.url.includes('&')))\n            ? '&'\n            : '?';\n    }\n\n    /**\n     * Get the next page url\n     *\n     * @return {string}\n     */\n    get nextPage() {\n        return this.url && this.next !== null\n            ? `${this.url}${this.connectorUrl}size=${this.size}&page=${this.next}`\n            : null;\n    }\n\n    /**\n     * Get the current page url\n     *\n     * @return {string}\n     */\n    get currentPage() {\n        return this.url && this.page !== null\n            ? `${this.url}${this.connectorUrl}size=${this.size}&page=${this.page}`\n            : null;\n    }\n\n    /**\n     * Get the previous page url\n     *\n     * @return {string}\n     */\n    get prevPage() {\n        return this.url && this.prev !== null\n            ? `${this.url}${this.connectorUrl}size=${this.size}&page=${this.prev}`\n            : null;\n    }\n\n    /**\n     * Get the pagination data\n     *\n     * @return {object}\n     */\n    get data() {\n        return {\n            _links: {\n                self: this.currentPage,\n                prev: this.prevPage,\n                next: this.nextPage,\n            },\n            count: this.total,\n            pages: this.pages,\n            size: this.size,\n            page: this.page,\n            result: this.current,\n        };\n    }\n\n    /**\n     * Set the items\n     *\n     * @param {array} items\n     *\n     * @return {Paginator}\n     */\n    setItems(items) {\n        if (items === null || items.constructor.name !== 'Array') {\n            throw new TypeError('items is not an array');\n        }\n\n        this.items = items;\n\n        return this;\n    }\n\n    /**\n     * Check if the page is valid.\n     *\n     * @param {number} page\n     *\n     * @return {boolean}\n     */\n    isValidPage(page) {\n        return page < this.pages && page >= 0;\n    }\n\n    /**\n     * Set the page\n     *\n     * @param {number} page\n     *\n     * @return {Paginator}\n     */\n    setPage(page) {\n        if (page !== null && page.constructor.name !== 'Number') {\n            throw new TypeError('page is not a valid number');\n        }\n\n        if (page !== null && !this.isValidPage(page)) {\n            throw new RangeError('page is not a valid number');\n        }\n\n        this.page = page || this.page;\n\n        return this;\n    }\n\n    /**\n     * Set the page size\n     *\n     * @param {number} size\n     *\n     * @return {Paginator}\n     */\n    setSize(size) {\n        if (size !== null && (size.constructor.name !== 'Number' || size < 1)) {\n            throw new TypeError('size is not a valid positive number');\n        }\n\n        this.size = size || this.size;\n\n        return this;\n    }\n\n    /**\n     * Set the url\n     *\n     * @param {string} url\n     *\n     * @return {Paginator}\n     */\n    setUrl(url) {\n        if (url !== null && url.constructor.name !== 'String') {\n            throw new TypeError('url is not a valid string');\n        }\n\n        this.url = url || this.url;\n\n        return this;\n    }\n}\n\n/**\n * Create Pagination with the paginator builder\n *\n * @param {array} items\n * @param {number|null} page\n * @param {number|null} size\n * @param {string|null} url\n *\n * @return {Paginator}\n */\nconst PaginatorBuilder = ({ items, page = null, size = null, url = null }) => {\n    const paginator = new Paginator();\n\n    paginator.setItems(items).setSize(size).setPage(page).setUrl(url);\n\n    return paginator;\n};\n\nexport default PaginatorBuilder;\n"],"names":["Paginator","constructor","items","page","size","url","pages","Math","ceil","total","prev","next","end","start","current","slice","length","connectorUrl","includes","nextPage","currentPage","prevPage","data","_links","self","count","result","setItems","name","TypeError","isValidPage","setPage","RangeError","setSize","setUrl","PaginatorBuilder","paginator"],"mappings":"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"}